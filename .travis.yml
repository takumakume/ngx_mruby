sudo: required
dist: bionic
language: cpp
compiler:
  - gcc
before_install:
  - echo "deb http://dk.archive.ubuntu.com/ubuntu/ xenial main" >> /etc/apt/sources.list
  - echo "deb http://dk.archive.ubuntu.com/ubuntu/ xenial universe" >> /etc/apt/sources.list
  - sudo add-apt-repository --yes ppa:ubuntu-toolchain-r/test
  - sudo apt-get -qq update
install:
  - sudo apt-get -qq install rake bison git gperf zlib1g-dev g++-4.9 libstdc++-4.9-dev
  - if [ "$CXX" = "g++" ]; then export CXX="g++-4.9" CC="gcc-4.9" LD="gcc-4.9"; fi
  - $CXX -v
env:
  - NGINX_SRC_MAJOR=1
    NGINX_SRC_MINOR=17
    NGINX_SRC_PATCH=5
  - BUILD_DYNAMIC_MODULE='TRUE'
    NGINX_SRC_MAJOR=1
    NGINX_SRC_MINOR=17
    NGINX_SRC_PATCH=5
  - NGINX_SRC_MAJOR=1
    NGINX_SRC_MINOR=17
    NGINX_SRC_PATCH=5
    BUILD_WITH_OPENSSL_SRC='TRUE'
  - NGINX_SRC_MAJOR=1
    NGINX_SRC_MINOR=17
    NGINX_SRC_PATCH=5
    BUILD_WITH_OPENSSL_SRC='TRUE'
    OPENSSL_SRC_VERSION='1.0.2'
  - NGINX_SRC_MAJOR=1
    NGINX_SRC_MINOR=16
    NGINX_SRC_PATCH=1
  - BUILD_DYNAMIC_MODULE='TRUE'
    NGINX_SRC_MAJOR=1
    NGINX_SRC_MINOR=16
    NGINX_SRC_PATCH=1
  - NGINX_SRC_MAJOR=1
    NGINX_SRC_MINOR=14
    NGINX_SRC_PATCH=2
  - BUILD_DYNAMIC_MODULE='TRUE'
    NGINX_SRC_MAJOR=1
    NGINX_SRC_MINOR=14
    NGINX_SRC_PATCH=2

before_script:
  - default_openssl_version=1.1.1
  - if [ "${OPENSSL_SRC_VERSION}" == "" ]; then openssl_version=${default_openssl_version}; else openssl_version=${OPENSSL_SRC_VERSION}"; fi
  - echo "Building OpenSSL version:${openssl_version}"
  - curl -sfL https://www.openssl.org/source/openssl-${openssl_version}-latest.tar.gz -o openssl-${openssl_version}.tar.gz
  - mkdir openssl-${openssl_version} && tar -xzf openssl-${openssl_version}.tar.gz -C openssl-${openssl_version} --strip-components 1
  - rm openssl-${openssl_version}.tar.gz
  - cd openssl-${openssl_version}
  - echo -n ${openssl_version} | awk -F '.' '{print $1}' > .openssl_major_version
  - echo -n ${openssl_version} | awk -F '.' '{print $2}' > .openssl_minor_version
  - ./config --prefix=/usr/local --shared zlib -fPIC >> /dev/null 2>&1
  - make >> /dev/null 2>&1
  - sudo make install >> /dev/null 2>&1
  - sudo ldconfig /usr/local/lib
  - cd -
  - openssl version

script:
  - echo "NGINX_SRC_MAJOR=${NGINX_SRC_MAJOR}" > nginx_version
  - echo "NGINX_SRC_MINOR=${NGINX_SRC_MINOR}" >> nginx_version
  - echo "NGINX_SRC_PATCH=${NGINX_SRC_PATCH}" >> nginx_version
  - echo "NGINX_SRC_VER=nginx-${NGINX_SRC_MAJOR}.${NGINX_SRC_MINOR}.${NGINX_SRC_PATCH}" >> nginx_version
  - if [ "${BUILD_WITH_OPENSSL_SRC}" == "TRUE" ]; then build_opts="--with-openssl-src=${PWD}/openssl-${openssl_version}"; fi
  - sh test.sh ${build_opts}

after_failure:
  - if [ -e build/nginx/logs/error.log ]; then cat build/nginx/logs/error.log ; else cat build_dynamic/nginx/logs/error.log; fi
